const {Telegraf, Markup, Composer, Scenes} = require('telegraf');
const { helloText } = require('../constants');
require('dotenv').config();
const bot = new Telegraf('5856492718:AAFYH9lDst1Jy1Itou4EINFXUwYTpUoBDUo');
const productList = require('../productList')
const products = productList.productList



//–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é –æ–±—ä–µ–∫—Ç ctx.session.data, –æ–Ω —Å–æ–∑–¥–∞—ë—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–≤–æ–π)
//–ì–æ–≤–æ—Ä—é, —á—Ç–æ —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏ - —Å–∞–º–æ–≤—ã–≤–æ–∑. (—Ç–∞–∫ –∫–∞–∫ —Å—Ü–µ–Ω–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞)
//–î–∞—é –≤—ã–±—Ä–∞—Ç—å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: –Ω–∞–ª –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥. –¢–∞–∫ –∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –≤–∏–∑–∞—Ä–¥ —Å—Ü–µ–Ω—ã, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –¥–æ–∫—É–ø–∏—Ç—å.
//NEXT
const payment = new Composer()
payment.on('text', async (ctx) => {
    try {
        ctx.session.data = {}
        ctx.session.data.orderType = 'üôã‚Äç‚ôÇÔ∏è–°–∞–º–æ–≤—ã–≤–æ–∑'
        await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã', Markup.keyboard( [['üí≥–ü–µ—Ä–µ–≤–æ–¥', 'üí∞–ù–∞–ª–∏—á–Ω—ã–µ'], ['–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é']] ).resize())
        await ctx.wizard.next()
    } catch (error) {
        console.log(error.message);
    }
})

//–µ—Å–ª–∏ —é–∑–µ—Ä –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫–∏ "–ø–µ—Ä–µ–≤–æ–¥" || "–ù–∞–ª–∏—á–Ω—ã–µ" - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —ç—Ç–æ –∫–∞–∫ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –≤ –æ–±—ä–µ–∫—Ç session.data.payment
//–ò —Ç—É—Ç –∂–µ —Å–ø—Ä–∞—à–∏–≤–∞—è –∏–º—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—è –∫–Ω–æ–ø–∫—É "–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é" –¥–µ–ª–∞–µ–º NEXT
//–ï—Å–ª–∏ –≤ –ø—Ä–æ—à–ª–æ–º —à–∞–≥–µ —é–∑–µ—Ä –Ω–∞–∂–∞–ª –Ω–∞ "–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é" - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º helloText –∏ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å—Ü–µ–Ω—ã
//–ï—Å–ª–∏ –Ω–∏–∫–∞–∫–∏–µ –∏–∑ –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏—Å—å - –∑–∞–Ω–æ–≤–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã –∏ "–≤—ã—Ö–æ–¥ –≤ –º–µ–Ω—é". 
const inputName = new Composer()
inputName.on('text', async (ctx) => {
    try {
        if (ctx.message.text === 'üí≥–ü–µ—Ä–µ–≤–æ–¥' || ctx.message.text === 'üí∞–ù–∞–ª–∏—á–Ω—ã–µ') {
            ctx.session.data.payment = ctx.message.text
            await ctx.reply('–ù–∞–ø–∏—à–∏—Ç–µ –∏–º—è', Markup.keyboard( [['–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é']] ).resize())
            await ctx.wizard.next()
        } else if (ctx.message.text == '–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é') {
            await ctx.replyWithHTML(helloText, Markup.keyboard([ ['üìù–ú–ï–ù–Æ'],['üõí–ö–û–†–ó–ò–ù–ê'] ]).resize())
            return ctx.scene.leave()
        } else {
        await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã', Markup.keyboard( [['üí≥–ü–µ—Ä–µ–≤–æ–¥', 'üí∞–ù–∞–ª–∏—á–Ω—ã–µ'], ['–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é']] ).resize())
        }
    } catch (error) {
        console.log(error.message);
    }
})


//–ï—Å–ª–∏ —é–∑–µ—Ä –Ω–∞–∂–∞–ª "–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é" - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º helloText, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å—Ü–µ–Ω—ã
//–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–µ–Ω—å—à–µ 3 —Å–∏–º–≤–æ–ª–æ–≤ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Å—Ç–æ–∏—Ç –Ω–µ –∏–∑ –±—É–∫–≤ - –æ—Ç–ø—Ä–∞–≤–ª—è—é —Å–±—â "–≤–≤–µ–¥–∏—Ç–µ –∏–º—è!", 

//–ï—Å–ª–∏ –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –Ω–µ –∏—Å–ø–æ–ª–Ω–∏–ª–∏—Å—å:
// 1. —Å–æ—Ö—Ä–∞–Ω—è—é –≤ –æ–±—ä–µ–∫—Ç session.data.name –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
// 2. –¥–æ—Å—Ç–∞—é –∏–∑ message.from.id –∞–π–¥–∏—à–Ω–∏–∫ —é–∑–µ—Ä–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è—é –≤ –æ–±—ä–µ–∫—Ç session.data.user
// 3. –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Å–∞–Ω–∏–µ–º" –∏ "–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"
// 4. NEXT
const requestNumber = new Composer()
requestNumber.on('text', async (ctx) => {
    try { 
         if (ctx.message.text == '–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é') {
            await ctx.replyWithHTML(helloText, Markup.keyboard([ ['üìù–ú–ï–ù–Æ'],['üõí–ö–û–†–ó–ò–ù–ê'] ]).resize())
            return ctx.scene.leave()
        } else if (ctx.message.text.length<3 || ctx.message.text.match(/\P{L}/giu)) {
            ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∏–º—è!')
        } else {
            ctx.session.data.name = ctx.message.text
            ctx.session.data.user = ctx.message.from.id
            await ctx.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏", Markup.keyboard([ 
                [{
                    text: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–Ω–∏–º –∫–∞—Å–∞–Ω–∏–µ–º üìû",
                    request_contact: true
                }], ['–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é'] 
            ]).resize());
            return ctx.wizard.next()
        }
    } catch (error) {
        console.log(error.message);
    }
})


//–ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - —ç—Ç–æ —Ç–µ–∫—Å—Ç:
    //–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª "–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é" - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º helloText —Å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –∏ –∫–æ—Ä–∑–∏–Ω—ã –∏ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å—Ü–µ–Ω—ã LEAVE
    //–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π !=11 –∏–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ü–∏—Ñ—Ä - –æ–ø—è—Ç—å –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —É—Ç–æ—á–Ω—è–µ–º –≤ –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –Ω–∞–¥–æ –≤–≤–æ–¥–∏—Ç—å.
    //–ò–Ω–∞—á–µ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ session.data.number –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô. NEXT
//–ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ–µ —Å–±—â - —ç—Ç–æ –∫–æ–Ω—Ç–∞–∫—Ç - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ session.data.number ctx.message.contact.phone_number(–∫–æ–Ω—Ç–∞–∫—Ç) –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô. NEXT
//–ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ–µ —Å–±—â - –Ω–∏ —Ç–µ–∫—Å—Ç, –Ω–∏ –∫–æ–Ω—Ç–∞–∫—Ç - –∑–∞–Ω–æ–≤–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç

const comment = new Composer()
comment.on('message', async (ctx) => {
    try {
        if (ctx.message.text) {
            if (ctx.message.text == '–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é') {
                await ctx.replyWithHTML( helloText, Markup.keyboard( [['üìù–ú–ï–ù–Æ'],['üõí–ö–û–†–ó–ò–ù–ê']] ).resize() )
                return ctx.scene.leave()
            } else if (ctx.message.text.length !== 11 || ctx.message.text.match(/\D/gi)) {
                ctx.reply('–í–≤–µ–¥–∏—Ç–µ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 89123456677')
            } else {
                ctx.session.data.number = ctx.message.text
                await ctx.reply('–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π?', Markup.keyboard(['–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è']).resize())
                return ctx.wizard.next()
            }
        } else if (ctx.message.contact.phone_number) {
                ctx.session.data.number = ctx.message.contact.phone_number
                await ctx.reply('–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π?', Markup.keyboard( ['–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'] ).resize());
                return ctx.wizard.next()
        } else {
                await ctx.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏", Markup.keyboard([ 
                    [
                        {
                        text: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–Ω–∏–º –∫–∞—Å–∞–Ω–∏–µ–º üìû",
                        request_contact: true
                        }
                    ], ['–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é']] ).resize());
        }
    } catch (error) {
        console.log(error.message);
    }
})


//–û—Å—Ç–∞–≤–ª—è–µ–º –≤ –∫–æ—Ä–∑–∏–Ω–µ —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
//–ó–∞–Ω–æ—Å–∏–º –≤ –æ–±—ä–µ–∫—Ç comment –ø—Ä–æ—à–ª–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
//—É–¥–∞–ª—è–µ–º 3 –ø—Ä–æ—à–ª—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è (*–≤—ã—è—Å–Ω–∏—Ç—å –∑–∞—á–µ–º)
//–û–±—ä—è–≤–ª—è–µ–º —Å—É–º–º—É, —Å–∫–∏–¥–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏. –°—É–º–º–∞ –±–æ–ª—å—à–µ 500? —Å–∫–∏–¥–∫–∞ 3%. –ë–æ–ª—å—à–µ 1000? 5% –≤—Ä–µ–º—è –ø–æ–∑–∂–µ 20:00? 15%
//
const paymentChoice = new Composer()
paymentChoice.on('message', async (ctx) => {
    try {
        ctx.session.cart = [...new Set(ctx.session.cart)]
        ctx.session.data.comment = ctx.message.text
        let cart = ctx.session.cart
        let k = 0;
        for(let i = 0; i < 3; i++ ){
            k =  ctx.message.message_id-i;
            await ctx.deleteMessage(k)}
        let sum = cart.reduce((acc, curr)=> {return acc+=curr.price*curr.count}, 0)
                let discount = 0
                if (sum >=500 && sum <1000) {
                    sum = sum/100*97
                    discount = 3
                } else if (sum >=1000) {
                    sum = sum/100*95
                    discount = 5
                }
    
await ctx.replyWithHTML(`
üõç<b>–í–∞—à –∑–∞–∫–∞–∑:</b>
„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è ${ctx.session.cart.filter(item => item.count>0).map(item => '\n'+ "‚óΩ" + item.title +' - ['+item.count+'*'+item.price+'|'+item.count*item.price+']')} 
„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è
<b>üí≥ –û–±—â–∞—è —Å—É–º–º–∞: ‚ÇΩ ${ctx.session.cart.reduce((acc, curr)=> {return acc+=curr.price*curr.count}, 0)}</b> 
–°–∫–∏–¥–∫–∞: <b>${discount}%</b>
    
<b><ins>–ò–¢–û–ì:</ins> ‚ÇΩ ${Math.round(sum)}</b>
„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è
üë§–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:
‚îî–ò–º—è: ${ctx.session.data.name}
‚îî–ù–æ–º–µ—Ä: ${ctx.session.data.number}

–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: ${ctx.session.data.orderType}
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${ctx.session.data.comment}
„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è
${ctx.session.data.payment == 'üí≥–ü–µ—Ä–µ–≤–æ–¥'? `–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ ${Math.round(sum)}‚ÇΩ –ø–æ –Ω–æ–º–µ—Ä—É <pre>89883090099</pre>
<a href="https://t.me/NeoChef2">–û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ</a>`:'–û–ø–ª–∞—Ç–∞: üí∞–ù–∞–ª–∏—á–Ω—ã–µ'}
„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è
–í–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∏—Å–ª–µ–Ω—ã –±–æ–Ω—É—Å—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –ø–æ–∫—É–ø–∫—É - ‚ÇΩ${(Math.round(sum*0.03))}üî∏
`, Markup.inlineKeyboard(
        [
            [Markup.button.callback('‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑', 'finallyConfirm')],
            [Markup.button.callback('‚ùå–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', 'finallyReject')]
        ]
    ))
    return ctx.wizard.next()
} catch (error) {
    console.log(error.message);
} })

const sendMsgToChanel = new Composer()
sendMsgToChanel.on('callback_query', async (ctx) => {
        try {
            let sum = ctx.session.cart.reduce((acc, curr)=> {return acc+=curr.price*curr.count}, 0)
                let discount = 0
                if (sum >=500 && sum <1000) {
                    sum = sum/100*97
                    discount = 3
                } else if (sum >=1000) {
                    sum = sum/100*95
                    discount = 5
                }
            const data = ctx.update.callback_query.data;
            if (data == 'finallyConfirm') {
                await ctx.answerCbQuery()
                await ctx.editMessageReplyMarkup({
                    inline_keyboard:
                    [
                        [{text:"–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω", callback_data:"orderSent"}]
                    ]
                })
                await bot.telegram.sendMessage(-1001846120532, 
`üõç–ù–æ–≤—ã–π –∑–∞–∫–∞–∑:
„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è ${ctx.session.cart.filter(item => item.count>0).map(item => '\n'+ "‚óΩ" + item.title +' - ['+item.count+'*'+item.price+'|'+item.count*item.price+']')} 
„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è
üí≥ –û–±—â–∞—è —Å—É–º–º–∞: ‚ÇΩ ${ctx.session.cart.reduce((acc, curr)=> {return acc+=curr.price*curr.count}, 0)} 
–°–∫–∏–¥–∫–∞: ${discount}%
        
<ins><b>–ò–¢–û–ì:</b></ins> ‚ÇΩ ${Math.round(sum)}
–ù–∞—á–∏—Å–ª–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤: ‚ÇΩ ${Math.round(sum*0.03)}üî∏
„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è
üë§–î–∞–Ω–Ω—ã–µ:
‚îî–ò–º—è: ${ctx.session.data.name}
‚îî–ù–æ–º–µ—Ä: <pre>${ctx.session.data.number}</pre>
‚îî‚úâÔ∏è<a href="tg://user?id=${ctx.session.data.user}">–ù–∞–ø–∏—Å–∞—Ç—å –∑–∞–∫–∞–∑—á–∏–∫—É</a>
–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: ${ctx.session.data.orderType}
–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: ${ctx.session.data.payment}
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${ctx.session.data.comment}
„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è„Ä∞Ô∏è
`, {
    reply_markup:{
        inline_keyboard:
        [
            [{text:"‚úÖ–û–ø–ª–∞—á–µ–Ω", callback_data:"accepted"}],
            [{text:"‚ùå–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data:`rejected`}]
        ] }, parse_mode: 'HTML'
    })
        ctx.session.cart = []
        products.forEach(product => product.count = 0)
        
        }
         if (data == 'finallyReject') {
            await ctx.answerCbQuery('–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω')
            ctx.session.cart = []
            products.forEach(item => item.count = null)
            await ctx.editMessageReplyMarkup({inline_keyboard:
                [
                    [Markup.button.callback('–û—Ç–º–µ–Ω—ë–Ω', 'cancelled')],
                ]
            })
            await ctx.replyWithHTML('–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–∫–∞–∑', Markup.keyboard(
                [
                    ['üìù–ú–ï–ù–Æ'],['üõí–ö–û–†–ó–ò–ù–ê']
                ]
            ).resize())
                    await ctx.scene.leave()
            
        } 
            return ctx.scene.leave()
    } catch (error) {
        console.log(error.message);
    }
})


const onplaceScene = new Scenes.WizardScene('onplaceScene', payment, inputName, requestNumber, comment, paymentChoice, sendMsgToChanel )


module.exports = onplaceScene